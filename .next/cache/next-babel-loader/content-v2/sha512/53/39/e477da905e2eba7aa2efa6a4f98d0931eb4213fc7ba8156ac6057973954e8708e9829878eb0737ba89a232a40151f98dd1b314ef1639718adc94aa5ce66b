{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient, ObjectId } from 'mongodb';\nimport React from 'react';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    description: props.meetupData.description,\n    address: props.meetupData.address\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 12\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://mubashir:smubashir@mubashircluster.9xg78.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetup = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetup.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://mubashir:smubashir@mubashircluster.9xg78.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        description: selectedMeetup.description,\n        image: selectedMeetup.image\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Users/USER/Downloads/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","React","MeetupDetail","MeetupDetails","props","meetupData","image","title","description","address","getStaticPaths","client","connect","db","meetupsCollection","collection","meetup","find","_id","toArray","close","fallback","paths","map","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","id"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,sBAAO,QAAC,YAAD;AACH,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KADrB;AAEH,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAFrB;AAGH,IAAA,WAAW,EAAEH,KAAK,CAACC,UAAN,CAAiBG,WAH3B;AAIH,IAAA,OAAO,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJvB;AAAA;AAAA;AAAA;AAAA,UAAP;AAMH;;AACD,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACjB,wGADiB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,MAAM,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAArB;AAGAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEN,MAAM,CAACO,GAAP,CAAWP,MAAM,KAAK;AAAEQ,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAET,MAAM,CAACE,GAAP,CAAWQ,QAAX;AAAZ;AAAV,KAAL,CAAjB;AAFJ,GAAP;AAIH;AACD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,QAAMd,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACjB,wGADiB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMc,cAAc,GAAG,MAAMf,iBAAiB,CAACgB,OAAlB,CAA0B;AAAEZ,IAAAA,GAAG,EAAElB,QAAQ,CAACyB,QAAD;AAAf,GAA1B,CAA7B;AAGAd,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACHhB,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AACR0B,QAAAA,EAAE,EAAEF,cAAc,CAACX,GAAf,CAAmBQ,QAAnB,EADI;AAERnB,QAAAA,KAAK,EAAEsB,cAAc,CAACtB,KAFd;AAGRE,QAAAA,OAAO,EAAEoB,cAAc,CAACpB,OAHhB;AAIRD,QAAAA,WAAW,EAAEqB,cAAc,CAACrB,WAJpB;AAKRF,QAAAA,KAAK,EAAEuB,cAAc,CAACvB;AALd;AADT;AADJ,GAAP;AAWH;AAED,eAAeH,aAAf","sourcesContent":["import { MongoClient, ObjectId } from 'mongodb';\r\nimport React from 'react'\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail'\r\n\r\nfunction MeetupDetails(props) {\r\n    return <MeetupDetail\r\n        image={props.meetupData.image}\r\n        title={props.meetupData.title}\r\n        description={props.meetupData.description}\r\n        address={props.meetupData.address}\r\n    />\r\n}\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect(\r\n        'mongodb+srv://mubashir:smubashir@mubashircluster.9xg78.mongodb.net/meetups?retryWrites=true&w=majority'\r\n    );\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const meetup = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n\r\n    client.close();\r\n    return {\r\n        fallback: false,\r\n        paths: meetup.map(meetup => ({ params: { meetupId: meetup._id.toString() } }))\r\n    }\r\n}\r\nexport async function getStaticProps(context) {\r\n    const meetupId = context.params.meetupId\r\n    const client = await MongoClient.connect(\r\n        'mongodb+srv://mubashir:smubashir@mubashircluster.9xg78.mongodb.net/meetups?retryWrites=true&w=majority'\r\n    );\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const selectedMeetup = await meetupsCollection.findOne({ _id: ObjectId(meetupId) });\r\n\r\n\r\n    client.close();\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                id: selectedMeetup._id.toString(),\r\n                title: selectedMeetup.title,\r\n                address: selectedMeetup.address,\r\n                description: selectedMeetup.description,\r\n                image: selectedMeetup.image\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default MeetupDetails"]},"metadata":{},"sourceType":"module"}